// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var LivereloadPlugin;
    return LivereloadPlugin = (function(_super) {

      __extends(LivereloadPlugin, _super);

      function LivereloadPlugin() {
        return LivereloadPlugin.__super__.constructor.apply(this, arguments);
      }

      LivereloadPlugin.prototype.name = 'livereload';

      LivereloadPlugin.prototype.config = {
        enabled: false,
        environments: {
          development: {
            enabled: true
          }
        }
      };

      LivereloadPlugin.prototype.populateCollections = function(opts) {
        var docpad, scriptsBlock;
        docpad = this.docpad;
        scriptsBlock = docpad.getBlock('scripts');
        scriptsBlock.add(['/socket.io/socket.io.js', "var socket = io.connect('/docpad-live-reload');\nsocket.on('regenerated',function(){\n	document.location.reload();\n});"], {
          defer: false
        });
        return this;
      };

      LivereloadPlugin.prototype.serverAfter = function(opts) {
        var server, serverHttp;
        server = opts.server, serverHttp = opts.serverHttp;
        this.socketApp = require('socket.io').listen(serverHttp || server).of('/docpad-live-reload');
        return this;
      };

      LivereloadPlugin.prototype.generateAfter = function(opts) {
        var _ref;
        if ((_ref = this.socketApp) != null) {
          _ref.emit('regenerated');
        }
        return this;
      };

      return LivereloadPlugin;

    })(BasePlugin);
  };

}).call(this);
